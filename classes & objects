In java, classes and objects are fundamental concepts of OOP, it enables to modeling the real word entities.

⭐ Class
- A class serves as a blueprint or template for creating objects.
- It defines the structure and behaviour that objects of that class will possess.
- A class can contain: 
  - Fields (attributes/variables): These hold the data or state of an object. 
  - Methods: These define the actions or behaviours an object can perform. 
  - Constructors: Special Methods used to initialize new objects when they are created.
- Example:
```
  public class Car{
    // Fields
    String brand;
    String model;
    int year;

    // Constructor
    public Car(String brand, String model, int year){
      this.brand = brand;
      this.model = model;
      this.year = year;
    }

    // Method
    public void displayInfo(){
      System.out.println("Hello World!");
    }
  }
```

⭐ Object
- An object is an instance of a class.
- It is the concrete realization of the blueprint defined by the class, representing a specific entity with its own unique state and behavior.
- Objects are created from classes using the 'new' keyword.
- Example:
```
  public class main(){
    public static void main(String args[]){
      Car c1 = new Car(); // object of the class Car
      c1.brand = "Toyota";
      c1.model = "Camry";
      c1.year = 2022;

      c1.displayInfo(); // Accessing object methods
    }
  }
```

In Short,
A class defines the general characteristics, while an object is a specific instance embodying those characteristics. You can create multiple distinct objcts from a single class.
